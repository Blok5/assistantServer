{"version":3,"sources":["context/context.ts","components/Header.tsx","components/Layout.tsx","components/Main.tsx","components/Search.tsx","components/Random.tsx","components/Router.tsx","context/assistantContext.tsx","App.tsx","index.tsx"],"names":["AppContext","React","createContext","StyledLink","styled","Link","Header","HeaderRoot","to","HeaderBack","HeaderTitleWrapper","HeaderSubtitle","HeaderTitle","HeaderContent","ActionButton","pin","IconSearch","ContainerStyled","Container","Layout","props","children","Main","Row","Col","sizeS","sizeM","sizeL","sizeXL","StyledDiv","div","StyledCarouselItem","CarouselItem","items","Search","useState","index","setIndex","handlerSkip","length","Carousel","axis","scrollAlign","scrollSnapType","detectActive","detectThreshold","map","el","i","className","scrollSnapAlign","Button","onClick","size","view","Random","isLoading","setLoading","isError","setError","data","setData","useEffect","axios","get","then","response","console","log","catch","error","description","Router","path","state","assistantInstance","createSmartappDebugger","token","initPhrase","getState","AssistantContext","instance","AssistantProvider","assistant","useRef","current","on","Provider","value","TypoScale","createGlobalStyle","sberBox","DocStyles","text","background","gradient","ThemeBackgroundEva","darkEva","ThemeBackgroundSber","darkSber","ThemeBackgroundJoy","darkJoy","App","character","useContext","history","useHistory","type","action","push","authenticated","lang","theme","Consumer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.68d89b93.chunk.js","sourcesContent":["import React from 'react';\r\nimport { AppContextInterface } from './types';\r\n\r\nexport const AppContext = React.createContext<AppContextInterface>({} as AppContextInterface);","import { IconSearch } from \"@sberdevices/plasma-icons\";\r\nimport { ActionButton, HeaderBack, HeaderContent, HeaderRoot, HeaderSubtitle, HeaderTitle, HeaderTitleWrapper } from \"@sberdevices/plasma-ui\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledLink = styled(Link)`\r\n    text-decoration: none;\r\n\r\n    &:focus, &:hover, &:visited, &:link, &:active {\r\n        text-decoration: none;\r\n    }\r\n`;\r\n\r\nconst Header: React.FC = function () {\r\n    return (\r\n        <HeaderRoot>\r\n            <StyledLink to=\"/\">\r\n                <HeaderBack />\r\n            </StyledLink>\r\n            <HeaderTitleWrapper>\r\n                <HeaderSubtitle>Салют,</HeaderSubtitle>\r\n                <HeaderTitle>Чем займемся?</HeaderTitle>\r\n            </HeaderTitleWrapper>\r\n            <HeaderContent>\r\n                <StyledLink to=\"/search\">\r\n                    <ActionButton pin=\"circle-circle\">\r\n                        <IconSearch />\r\n                    </ActionButton>\r\n                </StyledLink>\r\n            </HeaderContent>\r\n        </HeaderRoot >\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import Header from \"./Header\";\r\nimport { Container } from \"@sberdevices/plasma-ui\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ContainerStyled = styled(Container)`\r\n    height: calc(100vh - 144px);\r\n    display: flex;\r\n    flex-direction: column;\r\n`;\r\n\r\nconst Layout: React.FC = (props) => {\r\n    return (\r\n        <ContainerStyled>\r\n            <Header />\r\n            {props.children}\r\n        </ContainerStyled>\r\n    )\r\n};\r\n\r\nexport default Layout;","import { Col, Container, Row } from \"@sberdevices/plasma-ui\";\r\n\r\nconst Main: React.FC = () => (\r\n    <Container>\r\n        <Row>\r\n            <Col sizeS={1} sizeM={2} sizeL={3} sizeXL={4}>\r\n\r\n            </Col>\r\n        </Row>\r\n    </Container>\r\n);\r\n\r\nexport default Main;","import { Button, Carousel, CarouselItem } from \"@sberdevices/plasma-ui\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledDiv = styled.div`\r\n    min-height: 0;\r\n`;\r\n\r\nconst StyledCarouselItem = styled(CarouselItem)`\r\n    background: red;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: end;\r\n`;\r\n\r\nconst items = ['item', 'item', 'item', 'item', 'item', 'item'];\r\n\r\nconst Search: React.FC = () => {\r\n    const [index, setIndex] = React.useState(0);\r\n\r\n    const handlerSkip = () => {\r\n        if (index < items.length - 1) {\r\n            setIndex(index + 1);\r\n        } else {\r\n            setIndex(0);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <StyledDiv>\r\n            <Carousel\r\n                axis=\"y\"\r\n                index={index}\r\n                scrollAlign=\"center\"\r\n                scrollSnapType=\"mandatory\"\r\n                detectActive\r\n                detectThreshold={0.5}\r\n            >\r\n                {\r\n                    items.map((el, i) => {\r\n                        return (\r\n                            <StyledCarouselItem\r\n                                key={i}\r\n                                className=\"special\"\r\n                                scrollSnapAlign=\"center\"\r\n                            >\r\n                                {el + i}\r\n                                <Button onClick={handlerSkip} size=\"s\" view=\"secondary\">Пропустить</Button>\r\n                                <Button onClick={handlerSkip} size=\"s\" view=\"primary\">Выбрать</Button>\r\n                            </StyledCarouselItem>\r\n                        )\r\n                    })\r\n                }\r\n            </Carousel>\r\n        </StyledDiv>\r\n    )\r\n};\r\n\r\nexport default Search;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\n\r\nconst StyledDiv = styled.div`\r\n    min-height: 0;\r\n`;\r\n\r\ntype data = {\r\n    description: string;\r\n}\r\n\r\nconst Random: React.FC = () => {\r\n\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [isError, setError] = useState(false);\r\n    const [data, setData] = useState<data>({} as data);\r\n\r\n    useEffect(() => {\r\n        setError(false);\r\n        setLoading(true);\r\n\r\n        axios.get('http://46.243.143.219/assistant/api/v1/lucky')\r\n            .then(function (response) {\r\n                // handle success\r\n                console.log(response);\r\n                setData(response.data);\r\n                setLoading(false);\r\n            })\r\n            .catch(function (error) {\r\n                // handle error\r\n                console.log(error);\r\n            })\r\n            .then(function () {\r\n                // always executed\r\n            });\r\n    }, []);\r\n\r\n    if (isError) return <h1>Error</h1>\r\n    if (isLoading) return <h1>Loading</h1>\r\n    return (\r\n        <StyledDiv>\r\n            <div>\r\n                {data.description}\r\n            </div>\r\n        </StyledDiv>\r\n    )\r\n};\r\n\r\nexport default Random;","import {\r\n    Switch,\r\n    Route\r\n} from 'react-router-dom';\r\nimport Layout from './Layout';\r\nimport Main from './Main';\r\nimport Search from './Search';\r\nimport Random from './Random';\r\n\r\nconst Router = () => (\r\n    <Layout>\r\n        <Switch>\r\n            <Route path=\"/search\">\r\n                <Search />\r\n            </Route>\r\n            <Route path=\"/random\">\r\n                <Random />\r\n            </Route>\r\n            <Route path=\"/\">\r\n                <Main />\r\n            </Route>\r\n        </Switch>\r\n    </Layout>\r\n);\r\n\r\nexport default Router;","import { createSmartappDebugger } from \"@sberdevices/assistant-client\";\r\nimport React, { createContext, useEffect, useState, useRef } from \"react\";\r\n\r\nconst state = {};\r\nconst assistantInstance = createSmartappDebugger({\r\n    token: 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI4MzY0MGY0MjQwY2NhZDc3ODZjYmFkYjUzN2NjMTJjY2NmMzQ4NjcwZGNkYjQ1OTY2MWNkYjIyMDcyZDk1YzQyNTM5YmU5MjcwMDQyNjI5OCIsImF1ZCI6IlZQUyIsImV4cCI6MTYzMzE1OTgzNywiaWF0IjoxNjMzMDczNDI3LCJpc3MiOiJLRVlNQVNURVIiLCJ0eXBlIjoiQmVhcmVyIiwianRpIjoiZDU3ZDQ4OGUtOTIwNy00NTc3LWIwZjctMzUxMzNhODg0ZjE1Iiwic2lkIjoiZjJmZDg0ODMtNDEwZS00ZThlLWE4Y2QtMjhkYWEyNThlYWVlIn0.c7Sc9HsVKigr3ugUB-anDsFdPe3Z1BO2qxyvYmtu9F12a8VSI5vob5nOTlNlRf2-Q6hVLFmXyV562-zIdC9qVzat4ILK3DEFEmNgKWHTUWHSF_WD3Ew8PmNJl-zb8YOtDE8SvfRwM3ZPM4tQhSvl-JPq1BeRLCu1mWSNMcahvNpcT3hMsvZGIZqLBB-fXDjwWDteVDxZWoHeW7yIFwszYgmXD3UVxeJFWaWIZ3psa3VwcWyu1mRV1fxjLeOO2_Sila_Cb5gJmoYQuxtZxFNo4T4QQS7NA5tkwP-o8jZ1smJlZ9NUOgFrI3pK_lIMt8mW7oQ6syJ-p_4-oeH97mCSX1Cw-Pct7fr_xlf_hPWZMilOqteBa6-ZkR2yYY1Us1P-5__krZczvESSOFdSdmKzNNF-AJLmvCnKOoKBwOT-0ykytE4VgqBUwFGauvsKH4WSbOMfU3ZjJOUuho8FjCnU2g4squEiVY8eF9cV0R5UcczL9N57wrPhcZ1VtcWgeQGtMOKszRvWMFxXmmk9bGj6ThFRGnfDk-OnwR42Fc4xNSgxTyWF6s7NLDvpOl8zCrwlay8AcfeqKRXzAikoWMlrCSa0Aju3cqcou-kdOOF358nBtqKrt5ZXwdnHshgmN5L6Zjb3iASlZY6O8wjd7S9PreuLw2q89fS5pnR5CLec3Mc',\r\n    initPhrase: `Запусти Чем заняться?`,\r\n    getState: () => state\r\n});\r\nexport const AssistantContext = createContext<{\r\n    instance: any;\r\n    data: any | null;\r\n}>({\r\n    instance: assistantInstance,\r\n    data: null\r\n});\r\n\r\nexport const AssistantProvider: React.FC = ({ children }) => {\r\n    const assistant = useRef(assistantInstance);\r\n    const [data, setData] = useState<any | null>(null);\r\n\r\n    useEffect(() => {\r\n        assistant.current.on('data', (data) => {\r\n            setData(data);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <AssistantContext.Provider value={{\r\n            instance: assistant,\r\n            data\r\n        }}>\r\n            {children}\r\n        </AssistantContext.Provider>\r\n    );\r\n};\r\n","import React, { useState, useContext } from 'react';\r\nimport { AppContext } from './context/context'\r\nimport { createGlobalStyle } from 'styled-components';\r\nimport { sberBox } from '@sberdevices/plasma-tokens/typo';\r\nimport { darkEva, darkJoy, darkSber } from '@sberdevices/plasma-tokens';\r\nimport { text, background, gradient } from '@sberdevices/plasma-tokens';\r\nimport { DeviceThemeProvider } from '@sberdevices/plasma-ui';\r\nimport Router from './components/Router';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AssistantContext } from './context/assistantContext';\r\n\r\nconst TypoScale = createGlobalStyle(sberBox);\r\n\r\nconst DocStyles = createGlobalStyle`\r\n    html {\r\n        color: ${text};\r\n        background-color: ${background};\r\n        background-image: ${gradient};\r\n        height: 100%;\r\n    }\r\n\r\n    body {\r\n      height: 100%;\r\n    }\r\n`;\r\n\r\nconst ThemeBackgroundEva = createGlobalStyle(darkEva);\r\nconst ThemeBackgroundSber = createGlobalStyle(darkSber);\r\nconst ThemeBackgroundJoy = createGlobalStyle(darkJoy);\r\n\r\nconst App: React.FC = () => {\r\n  const [character] = useState('sber');\r\n\r\n  const { data } = useContext(AssistantContext);\r\n\r\n  console.log('data: ', data);\r\n\r\n  const history = useHistory();\r\n\r\n  if(data?.type === \"smart_app_data\"){\r\n    switch (data?.action?.type) {\r\n      case \"go_to_search\":\r\n        history.push(\"/search\");\r\n        break;\r\n      case \"randomAction\":\r\n        history.push(\"/random\");\r\n        break;\r\n      default:\r\n        console.log(\"дефолт\");\r\n    }\r\n  }\r\n  return (\r\n    <AppContext.Provider value={{\r\n      authenticated: true,\r\n      lang: 'en',\r\n      theme: 'dark'\r\n    }}>\r\n      <DeviceThemeProvider /*detectDeviceCallback={() => 'sberBox'}*/>\r\n        <TypoScale />\r\n        <DocStyles />\r\n        {(() => {\r\n          switch (character) {\r\n            case 'sber':\r\n              return <ThemeBackgroundSber />;\r\n            case 'eva':\r\n              return <ThemeBackgroundEva />;\r\n            case 'joy':\r\n              return <ThemeBackgroundJoy />;\r\n            default:\r\n              return;\r\n          }\r\n        })()}\r\n\r\n        <AppContext.Consumer>\r\n          {\r\n            ({ authenticated, lang }) => {\r\n              if (authenticated) {\r\n                return <Router />\r\n              }\r\n              return <h1>Необходимо войти с систему</h1>\r\n            }\r\n          }\r\n        </AppContext.Consumer>\r\n      </DeviceThemeProvider>\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport { AssistantProvider } from './context/assistantContext';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <AssistantProvider>\r\n        <App />\r\n      </AssistantProvider>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}